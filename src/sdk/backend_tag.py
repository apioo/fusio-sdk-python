"""
BackendTag automatically generated by SDKgen please do not edit this file manually
https://sdkgen.app
"""

import requests
import sdkgen
from requests import RequestException
from typing import List

from .backend_account_tag import BackendAccountTag
from .backend_action_tag import BackendActionTag
from .backend_app_tag import BackendAppTag
from .backend_audit_tag import BackendAuditTag
from .backend_backup_tag import BackendBackupTag
from .backend_category_tag import BackendCategoryTag
from .backend_config_tag import BackendConfigTag
from .backend_connection_tag import BackendConnectionTag
from .backend_cronjob_tag import BackendCronjobTag
from .backend_dashboard_tag import BackendDashboardTag
from .backend_event_tag import BackendEventTag
from .backend_generator_tag import BackendGeneratorTag
from .backend_identity_tag import BackendIdentityTag
from .backend_log_tag import BackendLogTag
from .backend_marketplace_tag import BackendMarketplaceTag
from .backend_operation_tag import BackendOperationTag
from .backend_page_tag import BackendPageTag
from .backend_plan_tag import BackendPlanTag
from .backend_rate_tag import BackendRateTag
from .backend_role_tag import BackendRoleTag
from .backend_schema_tag import BackendSchemaTag
from .backend_scope_tag import BackendScopeTag
from .backend_sdk_tag import BackendSdkTag
from .backend_statistic_tag import BackendStatisticTag
from .backend_tenant_tag import BackendTenantTag
from .backend_token_tag import BackendTokenTag
from .backend_transaction_tag import BackendTransactionTag
from .backend_trash_tag import BackendTrashTag
from .backend_user_tag import BackendUserTag
from .backend_webhook_tag import BackendWebhookTag

class BackendTag(sdkgen.TagAbstract):
    @classmethod
    def __init__(cls, http_client: requests.Session, parser: sdkgen.Parser):
        super().__init__(http_client, parser)

    @classmethod
    def webhook(cls) -> BackendWebhookTag:
        return BackendWebhookTag(
            cls.http_client,
            cls.parser
        )

    @classmethod
    def user(cls) -> BackendUserTag:
        return BackendUserTag(
            cls.http_client,
            cls.parser
        )

    @classmethod
    def trash(cls) -> BackendTrashTag:
        return BackendTrashTag(
            cls.http_client,
            cls.parser
        )

    @classmethod
    def transaction(cls) -> BackendTransactionTag:
        return BackendTransactionTag(
            cls.http_client,
            cls.parser
        )

    @classmethod
    def token(cls) -> BackendTokenTag:
        return BackendTokenTag(
            cls.http_client,
            cls.parser
        )

    @classmethod
    def tenant(cls) -> BackendTenantTag:
        return BackendTenantTag(
            cls.http_client,
            cls.parser
        )

    @classmethod
    def statistic(cls) -> BackendStatisticTag:
        return BackendStatisticTag(
            cls.http_client,
            cls.parser
        )

    @classmethod
    def sdk(cls) -> BackendSdkTag:
        return BackendSdkTag(
            cls.http_client,
            cls.parser
        )

    @classmethod
    def scope(cls) -> BackendScopeTag:
        return BackendScopeTag(
            cls.http_client,
            cls.parser
        )

    @classmethod
    def schema(cls) -> BackendSchemaTag:
        return BackendSchemaTag(
            cls.http_client,
            cls.parser
        )

    @classmethod
    def operation(cls) -> BackendOperationTag:
        return BackendOperationTag(
            cls.http_client,
            cls.parser
        )

    @classmethod
    def role(cls) -> BackendRoleTag:
        return BackendRoleTag(
            cls.http_client,
            cls.parser
        )

    @classmethod
    def rate(cls) -> BackendRateTag:
        return BackendRateTag(
            cls.http_client,
            cls.parser
        )

    @classmethod
    def plan(cls) -> BackendPlanTag:
        return BackendPlanTag(
            cls.http_client,
            cls.parser
        )

    @classmethod
    def page(cls) -> BackendPageTag:
        return BackendPageTag(
            cls.http_client,
            cls.parser
        )

    @classmethod
    def marketplace(cls) -> BackendMarketplaceTag:
        return BackendMarketplaceTag(
            cls.http_client,
            cls.parser
        )

    @classmethod
    def log(cls) -> BackendLogTag:
        return BackendLogTag(
            cls.http_client,
            cls.parser
        )

    @classmethod
    def identity(cls) -> BackendIdentityTag:
        return BackendIdentityTag(
            cls.http_client,
            cls.parser
        )

    @classmethod
    def generator(cls) -> BackendGeneratorTag:
        return BackendGeneratorTag(
            cls.http_client,
            cls.parser
        )

    @classmethod
    def backup(cls) -> BackendBackupTag:
        return BackendBackupTag(
            cls.http_client,
            cls.parser
        )

    @classmethod
    def event(cls) -> BackendEventTag:
        return BackendEventTag(
            cls.http_client,
            cls.parser
        )

    @classmethod
    def dashboard(cls) -> BackendDashboardTag:
        return BackendDashboardTag(
            cls.http_client,
            cls.parser
        )

    @classmethod
    def cronjob(cls) -> BackendCronjobTag:
        return BackendCronjobTag(
            cls.http_client,
            cls.parser
        )

    @classmethod
    def connection(cls) -> BackendConnectionTag:
        return BackendConnectionTag(
            cls.http_client,
            cls.parser
        )

    @classmethod
    def config(cls) -> BackendConfigTag:
        return BackendConfigTag(
            cls.http_client,
            cls.parser
        )

    @classmethod
    def category(cls) -> BackendCategoryTag:
        return BackendCategoryTag(
            cls.http_client,
            cls.parser
        )

    @classmethod
    def audit(cls) -> BackendAuditTag:
        return BackendAuditTag(
            cls.http_client,
            cls.parser
        )

    @classmethod
    def app(cls) -> BackendAppTag:
        return BackendAppTag(
            cls.http_client,
            cls.parser
        )

    @classmethod
    def action(cls) -> BackendActionTag:
        return BackendActionTag(
            cls.http_client,
            cls.parser
        )

    @classmethod
    def account(cls) -> BackendAccountTag:
        return BackendAccountTag(
            cls.http_client,
            cls.parser
        )


